
<style>
    .row-own {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }

    .none {
        list-style: none;
    }

    .none li {
        max-width: 300px;
    }

    .none a {
        margin: 5px;
        padding: 5px;
        font-size: 0.9em;
        border-radius: 4px;
        color: gainsboro;
    }

    .white {
        color: white;
    }


    .good a{
        color: lightgreen;
    }
    .bad a{
        color: lightpink;
    }
</style>
<h3 class="white">Отношения</h3>

<section>
    <h4 class="white">Матрицы</h4>
    <ul class="none">
        @foreach (var node in Problem.HardNodes)
        {
            <li class="@(!Problem.NodesNotConsistent.Contains(node) ? "good" : "bad")">
                <NavLink href="@($"/node/{node.Level}/{node.Name}/matrix")">
                    @node
                </NavLink>
            </li>
        }
    </ul>
</section>

<section>
    <h4 class="white">Опрос</h4>
    @foreach (var relationGroup in Problem.RelationsRequired.GroupBy(q => q.Main))
    {
        <b class="white">По @relationGroup.Key</b>
        <ul class="none">
            @foreach (var relation in relationGroup)
            {
                <li class="@(!Problem.RelationsNotConsistent.Contains(relation) ? "good" : "bad")">
                    <NavLink href="@($"relation/{GetIndexOf(relation)}")">
                        @relation.From.Name - @relation.To.Name
                    </NavLink>
                </li>
            }
        </ul>
    }
</section>

@code {
    public ProblemDecizion Problem => DSS.Ex.Problem;



    private int GetIndexOf(INodeRelation rel) => Problem.RelationsAll.ToList().IndexOf(rel);
}

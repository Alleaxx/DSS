@page "/relation/{relIndex:int}"
@inherits DSSComponentRelation
@layout EditorLayout

<style>
    table {
        border: 1px solid gainsboro;
        border-radius: 3px;
        padding: 5px;
        margin: 5px;
        min-width: 65%;
    }

    th, td {
        padding: 8px 24px;
        text-align: center;
    }

    th {
        font-size: 1.15em;
    }

    .selectable:hover {
        cursor: pointer;
        text-decoration: underline;
    }

    .selecte {
        text-decoration: underline;
    }


    .value {
        width: 30px;
    }

    .name-cell {
        width: 28%
    }

    .value-cell {
        width: 44%;
    }

    .left {
        text-align: left;
    }

    .right {
        text-align: right;
    }


    .border-bottom-t {
        border-bottom: 1px solid gainsboro;
    }
    .matrix a{
        text-decoration: none;
        color: black;
    }
</style>



@if (System == "1")
{
    <table class="matrix">
        <tbody>
            <tr class="border-bottom-t" >
                <td colspan="3" style="color: gray;padding-bottom: 15px">

                    <NavLink href="@($"/node/{Relation.Main.Level}/{Relation.Main.Name}")">
                        Критерий @Relation.Main.Name
                    </NavLink>
                </td>
            </tr>
            <tr class="border-bottom-t" style="font-size: 1.33em">
                <th class="name-cell right">
                    <NavLink href="@($"/node/{Relation.From.Level}/{Relation.From.Name}")">
                        @Relation.From.Name
                    </NavLink>

                    
                </th>
                <td class="value-cell">
                    @NodeRelation.GetTextRelationFor(Relation.Value) 
                </td>
                <th class="name-cell left">
                    <NavLink href="@($"/node/{Relation.To.Level}/{Relation.To.Name}")">
                        @Relation.To.Name
                    </NavLink>
                </th>
            </tr>
            <tr>
                <td></td>
                <td rowspan="5" style="@((Relation.Value == 1) ? RatingEqual.Style : "")" class="@( (Relation.Value == 1) ? "selecte" : "selectable")" @onclick="@(() => Relation.SetRating(Relation.From, 1))">@RatingEqual.Name</td>
            </tr>
            @foreach (var rating in Ratings)
            {
                <tr>
                    <td style="@((Relation.Node == Relation.From && rating.Value == Relation.Rating) ? rating.Style : "")" class="@( (Relation.Node == Relation.From && rating.Value == Relation.Rating) ? "selecte" : "selectable")" @onclick="@(() => Relation.SetRating(Relation.From, rating.Value))">
                        @rating.Name
                    </td>
                    <!--<td>-->@*@rating.Value*@<!--</td>-->
                    <td style="@((Relation.Node == Relation.To && rating.Value == Relation.Rating) ? rating.Style : "")" class="@( (Relation.Node == Relation.To && rating.Value == Relation.Rating) ? "selecte" : "selectable")" @onclick="@(() => Relation.SetRating(Relation.To, rating.Value))">
                        @rating.Name
                    </td>
                </tr>
            }
            @*<tr>
                    <td colspan="3">@Relation.Value</td>
                </tr>*@
        </tbody>
    </table>
}
else if (System == "2")
{
    <table>
        <tr class="border-bottom-t">
            <td colspan="3">Критерий @Relation.Main. Что лучше? </td>
        </tr>
        <tr class="border-bottom-t">
            <td class="name-cell">@Relation.From.Name</td>
            <td class="name-cell">@Relation.To.Name</td>
        </tr>
        <tr>
            <td colspan="2" class="value-cell">Одинаковы</td>
        </tr>
        <tr>
            <td colspan="2">Насколько?</td>
        </tr>
        @foreach (var test in Ratings)
        {
            <tr>
                <td colspan="2">@test.Name</td>
            </tr>
        }
        <tr>
            <td colspan="2">@Relation.From.Name @NodeRelation.GetTextRelationFor(Relation.Value) @Relation.To.Name</td>
        </tr>

    </table>
}
else if (System == "3")
{
    <table>
        <tr class="border-bottom-t">
            <td colspan="3">Критерий @Relation.Main. Что лучше? </td>
        </tr>
        <tr class="border-bottom-t">
            <td rowspan="5" class="name-cell" style="font-size:2.2em;width:25%">@Relation.From.Name</td>
            <td class="value-cell" style="width:50%">Одинаковы</td>
            <td rowspan="5" class="name-cell" style="font-size:2.2em;width:25%">@Relation.To.Name</td>
        </tr>
        @foreach (var test in Ratings)
        {
            <tr>
                <td>@test.Name</td>
            </tr>
        }
        @*<tr>
            <td colspan="2">@Relation.From.Name @NodeRelation.GetTextRelationFor(Relation.Value) @Relation.To.Name</td>
        </tr>*@

    </table>
}



@*<input type="text" @bind-value="@System" />*@

@code {
    public string System { get; set; } = "1";



    private Rating RatingEqual => new Rating(1);
    private Rating[] Ratings
    {
        get
        {
            List<Rating> ratings = new List<Rating>();
            for (int i = 3; i <= 9; i += 2)
            {
                ratings.Add(new Rating(i));
            }
            return ratings.ToArray();
        }
    }
}

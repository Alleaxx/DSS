@page "/node/{level:int}/{nodeName}"
@inherits DSSComponentNode
@layout EditorLayout

<style>
    .edit{
        width: 35%;
        padding-right: 20px;
    }
    .rels{

    }
    .structure {
        width: 65%;
        padding: 0 5px;
    }
    .structure a{
        text-decoration: none;
        font-size: 0.95em;
    }
    .structure h5{
        margin: 5px 0;
    }
    .structure a:hover{
        text-decoration: underline;
    }
    .structure h4{
        margin: 8px 0;
    }
    .rels a{
        text-decoration: none;
        margin-top: 2px;
    }
    .rels a:hover{
        text-decoration: none;
    }

    dt{
        margin-bottom: 5px;
    }

    .structure-list{
        margin: 4px 0;
    }
    .structure-list .active{
        color: black;
    }

    .main-criteria-element{
        font-size: 0.9em;
    }
    .relations-all-list{
        padding-left: 1em;
    }
    .relations-criteria-list{
        font-size: 0.8em;
        padding-left: 2em;
    }
</style>

<section class="row">
    <div class="edit">
        <h3>Редактирование</h3>
        <dl>
            <dt>
                Название:
            </dt>
            <dd>
                <input type="text" @bind-value="@Node.Name" />
            </dd>
        </dl>

        <div class="rels">
            <h4>Отношения</h4>
            @if (Problem.RelationsAll.Where(r => r.From == Node).Count() > 0)
            {
                <ul class="relations-all-list">
                    @foreach (var relGroup in Problem.RelationsRequired.Where(r => r.From == Node || r.To == Node).GroupBy(r => r.Main))
                    {
                        <li class="main-criteria-element">
                            <span>По '@relGroup.Key.Name':</span>
                            <ul class="relations-criteria-list">
                                @foreach (var rel in relGroup)
                                {
                                    <li>
                                        <NavLink href="@(Project.StageRelations[rel].Href)">
                                            @rel.From.Name @NodeRelation.GetTextRelationFor(rel) @rel.To.Name
                                        </NavLink>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p style="font-size:0.9em">Отношений с элементами этого же уровня нет</p>
            }
        </div>


        <div class="structure">
            <h4>Структура</h4>
            @foreach (var levelGroup in Problem.Dictionary)
            {
                <div style="@($"margin-left:{levelGroup.Key}em")">
                    <h5>@levelGroup.Key</h5>
                    <ul class="structure-list">
                        @foreach (var node in levelGroup.Value)
                        {
                            <li>
                                <NavLink href="@Nodes.Where(n => n.Node == node).First().Href">
                                    @node.Name
                                </NavLink>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>

    <section class="structure">
        <h4>Матрица отношений данного критерия</h4>
        <DSSAlternative.Pages.Отношения.NodeMatrixAlpha Node="@Node" />
    </section>
</section>


@code {


}
@page "/"

<style>
    .main-grid {
        display: grid;
        grid-template-columns: 1fr 2fr 1fr;
        grid-template-areas: "about problem info";
    }

    .about-area {
        grid-area: about;
        text-decoration: none;
        color: black;
        padding: 5px;
    }

    .problem-area {
        grid-area: problem;
        border-right: 1px solid gainsboro;
        border-left: 1px solid gainsboro;
        text-decoration: none;
        color: black;
        padding: 5px;
        min-height: 20em;
    }

    .info-area {
        grid-area: info;
        text-decoration: none;
        color: black;
        padding: 5px;
    }

    .about-area, .problem-area, .info-area {
        text-align: center;
    }

        .about-area img, .problem-area img, .info-area img {
            height: 100px;
            margin: auto;
        }

        .about-area p, .problem-area p, .info-area p {
            color: rgb(70, 70, 70);
        }

        .about-area:hover, .problem-area:hover, .info-area:hover {
            cursor: pointer;
            background-color: whitesmoke;
        }

    .pr-arrow {
        content: "->";
        margin: 0 1em;
    }

    .process {
        display: flex;
        align-items: center;
        height: 100px;
        text-align: center;
        vertical-align: middle;
        font-size: 1.5em;
    }

    .process-img {
        height: 50px;
    }
</style>

    <div class="main-grid">
        <a class="about-area" href="info">
            <img src="Images/Знак.png" />
            <h2>О системе</h2>
            <p>
                Подробно о назначении системе, её разработке и авторах.
            </p>
        </a>

        <a class="problem-area" href="start">
            <section class="process">
                <img class="process-img" src="Images/Иерархия.png" />
                <span class="pr-arrow">-></span>
                <img class="process-img" src="Images/Отношения.png" />
                <span class="pr-arrow">-></span>
                <img class="process-img" src="Images/Результаты.png" />
            </section>
            <!-- <img src="Отношения.png" /> -->
            <h2>Поддержка принятия решений</h2>
            <p>
                Основная функция системы - решение задач выбора.
            </p>
        </a>

        <a class="info-area" href="AHP">
            <img src="Images/Проект.jpg" />
            <h2>О методе</h2>
            <p>
                Подробно о методе анализа иерархий, который используется в системе.
            </p>
        </a>
    </div>

    @*<h1>Hello, world!</h1>
    <div>
        <h4>Принцип работы Blazor</h4>
        <p>
            Загрузка и настройка хоста происходит в program.cs. Там настраивается основной элемент для загрузки приложения (app)
        </p>
        <p>
            Стандартная страница - index.html, которая содержит в себе основной элемент приложения.
            Этот элемент использует компонент App.razor, который производит поиск запрашиваемых компонентов и отображает уже их.<br />
            Помимо этого он задает стандартную компоновку содержимого
        </p>
        <p>
            Для вызова кода в визуальной части используется знак почьты
        </p>
        <h5>Вызов компонентов</h5>
        <p>
            Для использования дочернего элемента достаточно вставить элемент с его именем в разметку Razor. Либо же использовать прямую маршрутизацию #page для перехода на страницу компонента
        </p>
        <h5>Параметры в компонентах</h5>
        <p>
            При вызове компонентов можно использовать параметры. Они передаются в виде атрибутов. В атрибутах можно использовать и обращения к коду C#.
            <br />
            Для их использовани в вызываемом компоненте должно быть соответствующее свойство
            с атрибутом Parameter.
            Для отображения содержимого необходимо использовать свойство RenderFragment ChildContent в дочернем компоненте. Туда будет передаваться всё, что находится в теле
            элемента.
        </p>
        <p>
            Также можно передавать набор атрибутов (например для формы). Для этого следует использовать словарь и всё такое...
        </p>
        <h5>Обработка событий</h5>
        <p>
            Определение событий происходит через назначение метода, который обрабатывает событие.
        </p>
        <p>
            Для обработки события в дочернем компоненте главный компонент может использовать свойство-параметр EventCallback.
        </p>


        <h4>Структура Blazor</h4>
        <ul>
            <li>
                <b>program.cs</b> - настраивает хост, определяет основной элемент, использующий маршрутизатор
            </li>
            <li>
                <b>wwwroot</b> - содержит статические данные приложения: CSS, начальную страницу index.html. Обращение происходит по /
            </li>
            <li>
                <b>App.razor</b> - компонент для маршрутизации, ищет запрошенный компонент и выдает либо его, либо ошибку поиска
            </li>
            <li>
                <b>Папка Pages</b> - содержит отдельные компоненты
            </li>
            <li>
                <b>Папка Shared</b> - содержит данные компоновки (основной шаблон, меню и так далее) в виде компонентов Blazor
            </li>
        </ul>
        <h4>Дополнительно</h4>
        <ul>
            <li>
                <b>_Imports.razor</b> - содержит библиотеки, которые используются в коде компонентов Razor
            </li>
        </ul>
        <img src="/Images/СимуляторРумине.png" width="350" />
    </div>*@

    @code {

    }

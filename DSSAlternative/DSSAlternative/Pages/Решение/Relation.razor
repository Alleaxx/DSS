@page "/relation-edit"
@inherits DSSProject
@layout EditorLayout


<div class="relations-grid">
    <nav class="menu-area">
        <NodeRelations Node="RelationActive.Main" Context="rel">
            <RelationView>
                <span>@rel.From.Name - @rel.To.Name</span>
            </RelationView>
        </NodeRelations>
    </nav>

    <section class="criterias">
        <style>
            .criterias-list {
                display: flex;
                flex-direction: column;
                flex-wrap: wrap;
            }

            .criteria {
                display: flex;
                margin: 2px;
                padding: 3px;
                border: 1px solid gainsboro;
                font-size: 0.8em;
                border-radius: 3px;
                cursor: pointer;
            }
            .criteria.selected-now{
                font-weight: bold;
            }

                .criteria:hover {
                    background-color: whitesmoke;
                }

            .progress {
                height: 4px;
                background: lightgreen;
                margin-left: 3px;
                transition-property: width;
                transition-duration: 0.4s;
            }
            .criteria-char{
                font-size: 1.5em;
                text-align: center;
                margin-right: 5px;
                width: 20px;
            }
        </style>
        @*
        Учитывать только требуемые отношения в цифрах
        Добавить светло-серый фон к прогрессу
        Уровень иерархии?*@

        <header style="display:flex; justify-content:space-between">
            <h2>
                Критерии
            </h2>
        </header>
        <div class="criterias-list">
            @foreach (var criteria in Relations.Where(r => r.Any()))
            {
                <a class="criteria @(RelationActive.Main == criteria.Key ? "selected-now" : "")" role="button" @onclick="() => SetNow(criteria.FirstRequired)">
                    <span class="criteria-char">
                        @(!criteria.Known ? "~" : !criteria.Consistent ? "X" : "✓")
                    </span>
                    <div style="flex:1; margin: 0 3px">
                        <div style="display: flex; justify-content:space-between; align-items: center;">
                            <span style="margin: 2px 0">
                                @criteria.Key.Level: @criteria.Key.Name
                            </span>
                            <span style="font-size:0.8em; color: gray;">
                                @criteria.Required.Where(r => !r.Unknown && !r.Self).Count() / @Math.Max(1, criteria.Required.Where(r => !r.Self).Count())
                            </span>
                        </div>
                        <div class="progress" style="width:@(((double)criteria.Where(r => !r.Unknown && !r.Self).Count() / Math.Max(1, criteria.Where(r => !r.Self).Count()) * 100).ToString("0"))%; background-color:@(criteria.Consistent ? "lightgreen" : "lightpink")"></div>
                    </div>
                </a>
            }
            <span style="text-align:right; font-size: 0.9em">
                @Relations.SelectMany(c => c.Required).Where(r => !r.Unknown && !r.Self).Count() / @Math.Max(1, Relations.SelectMany(c => c.Required).Where(r => !r.Self).Count())
            </span>
            @if (Relations.Correct)
            {
                <a class="res" href="@ResultsLink">
                    РЕЗУЛЬТАТ
                </a>
            }
        </div>
    </section>
    <section class="relation-area">
        <h2>@RelationActive.Main.Name</h2>



        <Tab>
            <TabItem>
                <Title>
                    <h4>Сравнение</h4>
                </Title>
                <ChildContent>
                    <RelationQuestion Relation="@RelationActive" />
                </ChildContent>
            </TabItem>
            <TabItem>
                <Title>
                    <h4>Матрица</h4>
                </Title>
                <ChildContent>
                    <NodeMatrix Node="@RelationActive.Main" />
                </ChildContent>
            </TabItem>
            <TabItem>
                <Title>
                    <h4>Настройки</h4>
                </Title>
                <ChildContent>
                    <section>
                        <h5>Настройки</h5>
                        <div>
                            <label for="amount">Количество градаций оценок:</label><br />
                            <input id="amount" type="number" @bind-value="@DSSApp.RatingSystem.Amount" min="1" max="12" />
                        </div>
                        <div>
                            <label for="border-cons">Граница согласованности</label><br />
                            <input id="border-cons" type="number" @bind-value="@MtxConsistency.BorderDefault" />
                        </div>
                        <p>
                            <a class="options-link" href="@OptionsLink">
                                <span>Все настройки</span>
                            </a>
                        </p>
                    </section>
                </ChildContent>
            </TabItem>
        </Tab>
        <div class="prev-next-stages">
            <a class="prev" @onclick="SetPrev">
                ← Вернуться
            </a>
            <a class="next" @onclick="SetNext">
                Далее →
            </a>
        </div>
    </section>

</div>

@code {

    protected INodeRelation Prev => Relations.PrevRequiredRel(RelationActive);
    protected INodeRelation Next => Relations.NextRequiredRel(RelationActive);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Project.OnRelationChanged += () => StateHasChanged();
    }

    private void SetNext()
    {
        SetNow(Next);
    }
    private void SetPrev()
    {
        SetNow(Prev);
        StateHasChanged();
    }
}

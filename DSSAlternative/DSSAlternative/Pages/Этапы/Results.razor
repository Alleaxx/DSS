@page "/results"
@inherits DSSProject
@layout EditorLayout

<style>
    .level-header {
    }

    .node-name {
        flex-basis: 22%;
    }

    .node-rating {
        flex-basis: 8%;
    }

    .level-best-nodes {
    }

    .node-best {
        font-weight: 600;
    }

    .node-progress {
        flex-basis: 70%;
        height: 5px;
        position: relative;

        border: 1px solid rgb(188,188,188);
        border-radius: 1px;
        background-color: rgb(230,230,230);
        border-left: 0;
        border-right: 0;
    }

    .progress-filler {
        height: 100%;
        position: absolute;
        background-color: rgb(6,176,37);
    }

    .res {
        font-size: 0.9em;
    }

    .results {
        list-style: none;
        flex-flow: row;
    }

        .results li {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

            .results li:before {
                content: "—";
                position: relative;
                left: -5px;
            }

        .results span {
            margin-bottom: 5px;
        }
</style>

<h2 class="content-header-h">
    Анализ результатов
</h2>
<section class="res">

    @if (RelationState.AreCorrect)
    {
        @foreach (var levelGroup in Problem.GroupedByLevel)
        {
            @if (levelGroup.Key != 0)
            {
                <h4 class="level-header">@levelGroup.First().LevelName ур. @levelGroup.Key</h4>
                <ul class="results">
                    @foreach (var node in levelGroup.OrderByDescending(n => n.Coefficient))
                    {
                        <li>
                            <span class="node-name">
                                @node.Name
                            </span>
                            <span class="node-rating">
                                @((node.Coefficient * 100).ToString("0.00"))
                            </span>
                            <div class="node-progress">
                                <div class="progress-filler" style="width:@((node.Coefficient * 100).ToString("0"))%" />
                            </div>
                        </li>
                    }
                </ul>
                <p class="level-best-nodes">
                    ЛУЧШИЙ ВЫБОР –
                    @foreach (var bestNode in Problem.Best(levelGroup.Key))
                    {
                        <span class="node-best">@bestNode.Name </span>
                    }
                </p>
            }
        }
        <HierShemeBig ViewSelection="HierShemeBig.ViewSelections.Best"></HierShemeBig>
    }
    else
    {
        @if (!RelationState.AreConsistenct)
        {
            <Warning Header="Несогласованность" Message="Некоторые отношения являются несогласованными!"></Warning>
        }
        @if (!RelationState.AreKnown)
        {
            <Warning Header="Незаполненность!" Message="Некоторые отношения не заполнены"></Warning>
        }
    }


</section>

@code{
    private string ReturnPrs(INode node)
    {
        return node.Coefficient.ToString("0");
    }
}